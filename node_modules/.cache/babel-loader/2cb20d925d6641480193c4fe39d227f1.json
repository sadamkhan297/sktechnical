{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sadam Khan\\\\Desktop\\\\Sk Technical\\\\src\\\\Component\\\\ContactForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ContactForm = () => {\n  _s();\n\n  const [inputForm, setInputForm] = useState(false);\n  const [inputData, setInputData] = useState({\n    name: \"\",\n    gmail: \"\",\n    phone: \"\"\n  });\n\n  const inputEvent = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setInputData(preVal => {\n      return { ...preVal,\n        [name]: value\n      };\n    });\n  };\n\n  const formSubmit = e => {\n    e.preventDefault();\n    setInputForm(true);\n    const {\n      name,\n      gmail,\n      phone\n    } = inputData;\n\n    if (name && gmail && phone) {\n      const res = fetch(\"https://reactwebsite-64737-default-rtdb.firebaseio.com/userDataManage.json\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name,\n          gmail,\n          phone\n        })\n      });\n\n      if (res) {\n        setInputData({\n          name: \"\",\n          gmail: \"\",\n          phone: \"\"\n        }); // alert(\"Data Stored\");\n      } else {\n        alert(\"plz fill the data\");\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact_form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"Name\",\n          required: true,\n          value: inputData.name,\n          onChange: inputEvent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"gmail\",\n          name: \"gmail\",\n          placeholder: \"Gmail\",\n          required: true,\n          value: inputData.gmail,\n          onChange: inputEvent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"numpber\",\n          name: \"phone\",\n          placeholder: \"Phone\",\n          required: true,\n          value: inputData.phone,\n          onChange: inputEvent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: inputForm ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"success\",\n            children: \" Got it, I'll contact you shortly, Thanks \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 37\n          }, this) : \"LET'S TALK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(ContactForm, \"HI7ztF94btFhIDBsUQEfIBp9FTQ=\");\n\n_c = ContactForm;\nexport default ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["C:/Users/Sadam Khan/Desktop/Sk Technical/src/Component/ContactForm.jsx"],"names":["React","useState","ContactForm","inputForm","setInputForm","inputData","setInputData","name","gmail","phone","inputEvent","event","value","target","preVal","formSubmit","e","preventDefault","res","fetch","method","headers","body","JSON","stringify","alert"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst ContactForm = () => {\r\n    const [inputForm, setInputForm] = useState(false)\r\n    const [inputData, setInputData] = useState({\r\n        name: \"\",\r\n        gmail: \"\",\r\n        phone: \"\"\r\n    })\r\n    const inputEvent = (event) => {\r\n        const { name, value } = event.target;\r\n        setInputData((preVal) => {\r\n            return {\r\n                ...preVal,\r\n                [name]: value,\r\n            }\r\n        })\r\n    }\r\n\r\n    const formSubmit = (e) => {\r\n        e.preventDefault();\r\n        setInputForm(true)\r\n        const { name, gmail, phone } = inputData;\r\n\r\n        if (name && gmail && phone ) {\r\n            const res = fetch (\r\n                \"https://reactwebsite-64737-default-rtdb.firebaseio.com/userDataManage.json\",\r\n                { \r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                    },\r\n                    body: JSON.stringify({\r\n                        name, \r\n                        gmail,\r\n                         phone,\r\n                    }),\r\n                }\r\n            );\r\n\r\n            if (res) {\r\n                setInputData({\r\n                    name: \"\",\r\n                    gmail: \"\",\r\n                    phone: \"\"\r\n                });\r\n                // alert(\"Data Stored\");\r\n            } else {\r\n                alert(\"plz fill the data\");\r\n            }\r\n        } \r\n    };\r\n\r\nreturn (\r\n    <>\r\n        <div className=\"contact_form\">\r\n            <form onSubmit={formSubmit}>\r\n                <input type=\"text\"\r\n                    name=\"name\"\r\n                    placeholder=\"Name\" required\r\n                    value={inputData.name}\r\n                    onChange={inputEvent}\r\n                />\r\n                <input type=\"gmail\"\r\n                    name=\"gmail\"\r\n                    placeholder=\"Gmail\" required\r\n                    value={inputData.gmail}\r\n                    onChange={inputEvent}\r\n                />\r\n                <input type=\"numpber\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Phone\" required\r\n                    value={inputData.phone}\r\n                    onChange={inputEvent}\r\n                />\r\n                <button type=\"submit\">\r\n                    {/* &nbsp; */}\r\n                    {\r\n                        inputForm ? <p className=\"success\"> Got it, I'll contact you shortly, Thanks </p> : \"LET'S TALK\"\r\n                    }\r\n                </button>\r\n            </form>\r\n        </div>\r\n    </>\r\n)\r\n }\r\nexport default ContactForm\r\n"]},"metadata":{},"sourceType":"module"}