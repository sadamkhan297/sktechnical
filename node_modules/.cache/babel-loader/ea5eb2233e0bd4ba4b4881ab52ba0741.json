{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sadam Khan\\\\Desktop\\\\Practical\\\\src\\\\App.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  const CustomDot = ({\n    onClick,\n    ...rest\n  }) => {\n    const {\n      onMove,\n      index,\n      active,\n      carouselState: {\n        currentSlide,\n        deviceType\n      }\n    } = rest;\n    const carouselItems = [CarouselItem1, CaourselItem2, CarouselItem3]; // onMove means if dragging or swiping in progress.\n    // active is provided by this lib for checking if the item is active or not.\n\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: active ? \"active\" : \"inactive\",\n      onClick: () => onClick(),\n      children: React.Children.toArray(carouselItems)[index]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }, this);\n  };\n\n  /*#__PURE__*/\n  _jsxDEV(Carousel, {\n    showDots: true,\n    customDot: /*#__PURE__*/_jsxDEV(CustomDot, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 37\n    }, this),\n    children: carouselItems\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-own-custom-container\",\n      children: /*#__PURE__*/_jsxDEV(Carousel, {\n        arrows: false,\n        showDots: true,\n        renderDotsOutside: renderButtonGroupOutside,\n        children: [/*#__PURE__*/_jsxDEV(ItemOne, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(ItemTwo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 18\n    }, this)\n  }, void 0, false);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Sadam Khan/Desktop/Practical/src/App.jsx"],"names":["App","CustomDot","onClick","rest","onMove","index","active","carouselState","currentSlide","deviceType","carouselItems","CarouselItem1","CaourselItem2","CarouselItem3","React","Children","toArray","renderButtonGroupOutside"],"mappings":";;;;AACA,MAAMA,GAAG,GAAG,MAAM;AACd,QAAMC,SAAS,GAAG,CAAC;AAAEC,IAAAA,OAAF;AAAW,OAAGC;AAAd,GAAD,KAA0B;AACxC,UAAM;AACJC,MAAAA,MADI;AAEJC,MAAAA,KAFI;AAGJC,MAAAA,MAHI;AAIJC,MAAAA,aAAa,EAAE;AAAEC,QAAAA,YAAF;AAAgBC,QAAAA;AAAhB;AAJX,QAKFN,IALJ;AAMA,UAAMO,aAAa,GAAG,CAACC,aAAD,EAAgBC,aAAhB,EAA+BC,aAA/B,CAAtB,CAPwC,CAQxC;AACA;;AACA,wBACE;AACE,MAAA,SAAS,EAAEP,MAAM,GAAG,QAAH,GAAc,UADjC;AAEE,MAAA,OAAO,EAAE,MAAMJ,OAAO,EAFxB;AAAA,gBAIGY,KAAK,CAACC,QAAN,CAAeC,OAAf,CAAuBN,aAAvB,EAAsCL,KAAtC;AAJH;AAAA;AAAA;AAAA;AAAA,YADF;AAQD,GAlBH;;AAmBE;AAAA,UAAC,QAAD;AAAU,IAAA,QAAQ,MAAlB;AAAmB,IAAA,SAAS,eAAE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAA9B;AAAA,cACCK;AADD;AAAA;AAAA;AAAA;AAAA;;AAKF,sBACI;AAAA,2BACS;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA,6BACf,QAAC,QAAD;AAAU,QAAA,MAAM,EAAE,KAAlB;AAAyB,QAAA,QAAQ,EAAE,IAAnC;AAAyC,QAAA,iBAAiB,EAAEO,wBAA5D;AAAA,gCACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADe;AAAA;AAAA;AAAA;AAAA;AADT,mBADJ;AAUH,CAnCD;;KAAMjB,G;AAqCN,eAAeA,GAAf","sourcesContent":["\r\nconst App = () => {\r\n    const CustomDot = ({ onClick, ...rest }) => {\r\n        const {\r\n          onMove,\r\n          index,\r\n          active,\r\n          carouselState: { currentSlide, deviceType }\r\n        } = rest;\r\n        const carouselItems = [CarouselItem1, CaourselItem2, CarouselItem3];\r\n        // onMove means if dragging or swiping in progress.\r\n        // active is provided by this lib for checking if the item is active or not.\r\n        return (\r\n          <button\r\n            className={active ? \"active\" : \"inactive\"}\r\n            onClick={() => onClick()}\r\n          >\r\n            {React.Children.toArray(carouselItems)[index]}\r\n          </button>\r\n        );\r\n      };\r\n      <Carousel showDots customDot={<CustomDot />}>\r\n      {carouselItems}\r\n    </Carousel>;\r\n    \r\n    \r\n    return (\r\n        <>\r\n                 <div className='my-own-custom-container'>\r\n  <Carousel arrows={false} showDots={true} renderDotsOutside={renderButtonGroupOutside}>\r\n    <ItemOne/>\r\n    <ItemTwo/>\r\n  </Carousel>\r\n</div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}