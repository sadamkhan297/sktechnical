{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst navbar = document.getElementsByClassName(\"center_menu\");\n\nconst Header = () => {\n  _s();\n\n  let [scroll, setScroll] = useState(false);\n  ;\n\n  const handleScroll = () => {\n    if (window.scrollY > 2) {\n      setScroll(true);\n    } else {\n      setScroll(false);\n    }\n  }; //useEffect to Event Listen\n\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n    handleScroll.classList.add(\"scrolled\");\n    return () => {// window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(Header, \"h88QyPIB9amt30SbYny45qXhMVQ=\");\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["C:/Users/Sadam Khan/Desktop/pre-12/src/Component/Header.jsx"],"names":["React","useState","useEffect","navbar","document","getElementsByClassName","Header","scroll","setScroll","handleScroll","window","scrollY","addEventListener","classList","add"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;;;AACA,MAAMC,MAAM,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,aAAhC,CAAf;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAEjB,MAAI,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,KAAD,CAAlC;AAA0C;;AAE1C,QAAMQ,YAAY,GAAG,MAAM;AAC7B,QAAIC,MAAM,CAACC,OAAP,GAAiB,CAArB,EAAwB;AACvBH,MAAAA,SAAS,CAAC,IAAD,CAAT;AACA,KAFD,MAEO;AACNA,MAAAA,SAAS,CAAC,KAAD,CAAT;AACA;AACD,GANE,CAJiB,CAWjB;;;AACHN,EAAAA,SAAS,CAAC,MAAM;AACfQ,IAAAA,MAAM,CAACE,gBAAP,CAAwB,QAAxB,EAAkCH,YAAlC;AACMA,IAAAA,YAAY,CAACI,SAAb,CAAuBC,GAAvB,CAA2B,UAA3B;AACN,WAAO,MAAM,CACZ;AACA,KAFD;AAGA,GANQ,EAMN,EANM,CAAT;AAQG,sBACI,qCADJ;AAKH,CAzBD;;GAAMR,M;;KAAAA,M;AA2BN,eAAeA,MAAf","sourcesContent":["import React,{useState,useEffect} from 'react'\r\nconst navbar = document.getElementsByClassName(\"center_menu\");\r\n\r\nconst Header = () => {\r\n\r\n    let [scroll, setScroll] = useState(false);;\r\n\r\n    const handleScroll = () => {\r\n\t\tif (window.scrollY > 2) {\r\n\t\t\tsetScroll(true);\r\n\t\t} else {\r\n\t\t\tsetScroll(false);\r\n\t\t}\r\n\t};\r\n    //useEffect to Event Listen\r\n\tuseEffect(() => {\r\n\t\twindow.addEventListener(\"scroll\", handleScroll);\r\n        handleScroll.classList.add(\"scrolled\")\r\n\t\treturn () => {\r\n\t\t\t// window.removeEventListener(\"scroll\", handleScroll);\r\n\t\t};\r\n\t}, []);\r\n\r\n    return (\r\n        <>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header\r\n"]},"metadata":{},"sourceType":"module"}